# You can use this to import tunnels from your ~/.ssh/config file
import_hosts = ["dev1", "dev2"]
# or: (this is what happens if this config file can not be found)
import_all_hosts = true
# Time (in seconds) to keep a tunnel with no connections open before closing it:
timeout = 300
# Control socket (expert setting - create new tunnels on the fly)
control_socket = "~/.ssh/ssh-tunnel-proxy.sock"

[global]
user = "my_username"
[global.opts]
verify_host_key = "never"

[[tunnel]]
user = "my_username"
host = "dev1.example.com"
proxy_jump = "my_username@bastion.example.com"
# Repeat the following section to forward multiple ports
[[tunnel.forward]]
# This is equivalent to -L localhost:8881:localhost:8880
type = "local" # type="local" is the default, and can be omitted
local_interface = "localhost" # This tunnel only accepts connections from your own computer
local_port = 8881
remote_host = "localhost"
remote_port = 8880
[[tunnel.forward]]
# This is equivalent to -L localhost:8501:consul.service.consul:8500
type = "local"
local_interface = "localhost"
local_port = 8501
remote_host = "consul.service.consul"
remote_port = 8500
[[tunnel.forward]]
# This is equivalent to -L ~/mysql.sock:mysql.service.consul:3306
type = "local"
local_socket = "~/mysql.sock"
remote_host = "mysql.service.consul"
remote_port = 3306
[[tunnel.forward]]
# This is equivalent to -L localhost:8883:/var/run/nginx.sock
local_interface = "localhost"
local_port = 8883
remote_socket = "/var/run/nginx.sock"
[[tunnel.forward]]
# This is equivalent to -L ~/nginx.sock:/var/run/nginx.sock
local_socket = "~/nginx.sock"
remote_socket = "/var/run/nginx.sock"

[[tunnel]]
user = "my_username"
host = "dev2.example.com"
proxy_jump = "my_username@bastion.example.com"
[tunnel.opts] # Additional options to net-ssh, see: https://net-ssh.github.io/ssh/v2/api/classes/Net/SSH.html#M000002
port = 2222
keys = ["~/.ssh/my_key"]
verbose = "info"
[[tunnel.forward]]
# This is equivalent to -L *:8882:localhost:8880
type = "local"
# Without "local_interface", this tunnel accepts connections on all interfaces
local_port = 8882
remote_host = "localhost"
remote_port = 8880
[[tunnel.forward]]
# This is equivalent to -D localhost:8888
type = "dynamic"
local_interface = "localhost"
local_port = 8888
